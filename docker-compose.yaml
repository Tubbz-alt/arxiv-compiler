version: '3.4'
x-base-service:
  &base-service
  stdin_open: true
  tty: true
  environment:
    SECRET_KEY: "not secure only use for development"
    DOCKER_HOST: "unix:///var/run/docker.sock"
    REDIS_ENDPOINT: "compiler-test-redis"
    AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
    AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
    AWS_S3_REGION_NAME: "us-east-1"
    S3_ENDPOINT: "https://compiler-test-localstack:4572"
    S3_VERIFY: 0
    COMPILER_DOCKER_IMAGE: "${COMPILER_DOCKER_IMAGE}"
    FILE_MANAGER_CONTENT_PATH: "/src/{source_id}"
    LOGLEVEL: 10
    FLASK_APP: /opt/arxiv/app.py
    FLASK_DEBUG: 1
    HOST_SOURCE_ROOT: "${HOST_SOURCE_ROOT}"
    VERBOSE_COMPILE: 1

services:
  compiler-test-redis:
    image: redis
    container_name: compiler-test-redis
    networks:
      - compiler-test
    ports:
      - "6379:6379"
  compiler-test-localstack:
    image: atlassianlabs/localstack
    container_name: compiler-test-localstack
    networks:
      - compiler-test
    ports:
      - "4572:4572"
      - "4568:4568"
    environment:
      USE_SSL: 'true'
      DEBUG: 'true'
  compiler-test-api:
    << : *base-service
    build: .
    command: pipenv run flask run -h 0.0.0.0 -p 8000
    depends_on:
     - "compiler-test-localstack"
     - "compiler-test-redis"
     - "compiler-test-worker"
    networks:
      - compiler-test
    ports:
      - "8000:8000"
  # dind:
  #   image: docker:17.11-dind
  #   privileged: true
  #   volumes:
  #     - /tmp/dind:/var/lib/docker
  #     - /tmp/dind-run:/var/run/docker.sock
  #     - "${HOST_SOURCE_ROOT}:/tmp"
  compiler-test-worker:
    << : *base-service
    build: .
    command: /opt/arxiv/start_worker.sh -A compiler.worker.celery_app --loglevel=INFO -E --concurrency=2
    depends_on:
     - "compiler-test-localstack"
     - "compiler-test-redis"
    networks:
      - compiler-test

    volumes:
      - "${HOST_SOURCE_ROOT}:/tmp"
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  compiler-test:
