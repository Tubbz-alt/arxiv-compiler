openapi: "3.0.0"
info:
  version: "0.1"
  title: "arXiv Compliler Service"
  contact:
    name: "arXiv API Team"
    email: nextgen@arxiv.org
  license:
    name: MIT

components:
  parameters:
    source_id:
      name: source_id
      in: path
      description: The upload workspace ID.
      required: true
      schema:
        type: integer
    checksum:
      name: checksum
      in: path
      description: The checksum of the upload workspace being compiled.
      required: true
      schema:
        type: string
    output_format:
      name: output_format
      in: path
      description: The compilation output format.
      required: true
      schema:
        type: string

paths:
  /status:
    get:
      operationId: getServiceStatus
      summary: |
        Get information about the current status of compilation service.
      responses:
        '200':
          description: OK
        '503':
          description: Service Unavailable

  /:
    post:
      description: |
        Using the source_id, checksum, and format, use the Celery AsyncTask API
        to check the existance/status of a compilation. If it does not exist,
        create an asynchronous task using the source_id, checksum, and format
        as a joint key and as call parameters. In either case, redirect (303)
        to getCompilationStatus.
      operationId: requestCompilation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'resources/requestCompilation.json'
      responses:
        '202':
          description: Accepted for compilation.
          headers:
            Location:
              description: The URL for the compilation task.
              schema:
                type: string


  /{source_id}/{checksum}/{output_format}:
    description: |
      This resource represents the compilation and its products. This should
      tell the client about the compilation task itself (e.g. when it started,
      its status, parameters), the location of the product of the compilation
      (e.g. the PDF, DVI, PS), and the location of the log.
    parameters:
    - $ref: '#/components/parameters/source_id'
    - $ref: '#/components/parameters/checksum'
    - $ref: '#/components/parameters/output_format'
    get:
      operationId: getCompilationStatus
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: 'resources/compilationStatus.json'
        '303':
          description: Redirect to getCompilationStatusStatus for the compilation.
        '404':
          description: No compilation has been requested.


  /{source_id}/{checksum}/{output_format}/log:
    description: |
      The log bytestream itself.
      TODO: add text/plain mime-type, etc. to response description.
    parameters:
    - $ref: '#/components/parameters/source_id'
    - $ref: '#/components/parameters/checksum'
    - $ref: '#/components/parameters/output_format'
    get:
      operationId: getCompilationLog
      responses:
        '200':
          description: OK

  /{source_id}/{checksum}/{output_format}/product:
    description: |
      The product bytestream; e.g. application/pdf, application/ps
    parameters:
    - $ref: '#/components/parameters/source_id'
    - $ref: '#/components/parameters/checksum'
    - $ref: '#/components/parameters/output_format'
    get:
      operationId: getProduct
      responses:
        '200':
          description: OK
